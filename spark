#!/bin/bash

#############################################
# Author: Josh "Killswitch" Manders
# Github: http://github.com/killswitch/spark
# Website: http://www.joshmanders.com
#############################################

version="0.0.1"
spark_version=`php tools/spark version`

# Array of commands required for this script to work
reqs=( "php" )

Colors() {
Escape="\033";

BlackF="${Escape}[30m";   RedF="${Escape}[31m";   GreenF="${Escape}[32m";
YellowF="${Escape}[33m";  BlueF="${Escape}[34m";    Purplef="${Escape}[35m";
CyanF="${Escape}[36m";    WhiteF="${Escape}[37m";

BlackB="${Escape}[40m";     RedB="${Escape}[41m";     GreenB="${Escape}[42m";
YellowB="${Escape}[43m";    BlueB="${Escape}[44m";    PurpleB="${Escape}[45m";
CyanB="${Escape}[46m";      WhiteB="${Escape}[47m";

BoldOn="${Escape}[1m";      BoldOff="${Escape}[22m";
ItalicsOn="${Escape}[3m";   ItalicsOff="${Escape}[23m";
UnderlineOn="${Escape}[4m";     UnderlineOff="${Escape}[24m";
BlinkOn="${Escape}[5m";   BlinkOff="${Escape}[25m";
InvertOn="${Escape}[7m";  InvertOff="${Escape}[27m";

Reset="${Escape}[0m";
}
Colors;

function die_if_not_yes
{
  if [[ ! $REPLY =~ ^[Yy]$ ]]
    then
    echo "Goodbye!"
    exit 1
  fi
}

function msg
{
  case "$1" in
    e|E ) echo -en >&2 "${RedF}${BoldOn}[ ERROR ]";;
    s|S ) echo -en "${GreenF}${BoldOn}[ SUCCESS ]";;
    * ) echo -en "${BlueF}${BoldOn}[ INFO ]";;
  esac
  echo -e "${Reset} $2";
}

function install_base
{
  echo "Installing CI Sparks..."
  php -r "$(curl -fsSL http://getsparks.org/go-sparks)"
  echo
}

# Loop through required commands, error&exit if one isn't found
msg i "Checking required commands exist..."
for i in "${reqs[@]}"
do :
  # -P tells type to specifically check the PATH
  type -P "$i" > /dev/null 2>&1 || {
    msg e "$i must be installed to use this script. Aborting."
    exit 1
  }
  msg s "Required application $i is installed!"
done
msg i "Prerequisite checks complete"
echo

# If they're trying to install/remove, check 'tools/spark' is a file
# ...after all, there's not much we can do without it.
if [ "$1" == install ] || [ "$1" == remove ]
  then
  if [ ! -f "tools/spark" ]
    then
    msg e "CI Sparks must be installed to $1 a spark"
    read -p "Install CI sparks now (y/n)? " -n 1 -r
    echo

    die_if_not_yes

    install_base
  fi

  # Nice little info message saying we're about to install/remove stuff
  echo i "Attempting to $1 $2 v$3"
fi

if [ "$1" == init ]
  then
  if [ -f "tools/spark" ]
    then
    msg e "CI Sparks is already installed! You have version ${spark_version}."
    read -p "Check for updates (y/n)? " -n 1 -r
    echo

    die_if_not_yes
    hehe
    php tools/spark upgrade-system
    exit 0
  fi
  install_base

elif [ "$1" == install ]; then

  if [ -z "$2" ]; then

    msg e "Uh oh!"
    echo "format: spark install example-spark 1.0.0"

  else

    php tools/spark install -v$3 $2

  fi

elif [ "$1" == remove ]; then
    
  php tools/spark remove $2 -f

elif [ "$1" == version ]; then
  
  echo "Spark.sh version: "$version
  echo "Spark version: "$spark_version

else

  php tools/spark $1 $2

fi